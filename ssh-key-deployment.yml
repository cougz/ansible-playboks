---
- name: Simple SSH key deployment test
  hosts: t-vaultwarden2.home.seiffert.me
  gather_facts: yes
      
  vars:
    target_key_path: "/root/.ssh/id_rsa"
    # Survey variable will be available directly as ssh_private_key_content
    
  tasks:
    - name: Check if Survey variable is provided
      fail:
        msg: "SSH private key must be provided via Survey variable 'ssh_private_key_content'"
      when: ssh_private_key_content is not defined or ssh_private_key_content == ''
      run_once: true

    - name: Check survey variable length
      debug:
        msg: "SSH key survey var length: {{ ssh_private_key_content | length }}"
    - name: Show first and last few characters
      debug:
        msg: |
          First 50 chars: {{ ssh_private_key_content[:50] }}
          Last 50 chars: {{ ssh_private_key_content[-50:] }}

    - name: Deploy SSH key with proper line breaks
      copy:
        content: |
          -----BEGIN OPENSSH PRIVATE KEY-----
          {{ ssh_private_key_content | regex_replace('^-----BEGIN OPENSSH PRIVATE KEY-----\\s*', '') | regex_replace('\\s*-----END OPENSSH PRIVATE KEY-----

    - name: Show format result
      debug:
        msg: "Format result: {{ format_result.stdout }}"
    - name: Check deployed file
      stat:
        path: "{{ target_key_path }}"
      register: key_stat
        path: "{{ target_key_path }}"
      register: key_stat

    - name: Show file info
      debug:
        msg: |
          File exists: {{ key_stat.stat.exists }}
          File size: {{ key_stat.stat.size }}
          File mode: {{ key_stat.stat.mode }}

    - name: Show first few lines of deployed key
      shell: head -n 3 {{ target_key_path }}
      register: key_head
      ignore_errors: yes

    - name: Show last few lines of deployed key  
      shell: tail -n 3 {{ target_key_path }}
      register: key_tail
      ignore_errors: yes

    - name: Display key file content check
      debug:
        msg: |
          First 3 lines:
          {{ key_head.stdout }}
          
          Last 3 lines:
          {{ key_tail.stdout }}

    - name: Test key with ssh-keygen
      command: ssh-keygen -y -f {{ target_key_path }}
      register: key_test
      ignore_errors: yes

    - name: Show key test results
      debug:
        msg: |
          Return code: {{ key_test.rc }}
          Stdout: {{ key_test.stdout }}
          Stderr: {{ key_test.stderr }}, '') | regex_replace('\\s+', '\n') | regex_replace('\n+', '\n') }}
          -----END OPENSSH PRIVATE KEY-----
        dest: "{{ target_key_path }}"
        mode: '0600'

    - name: Check deployed file
      stat:
        path: "{{ target_key_path }}"
      register: key_stat

    - name: Show file info
      debug:
        msg: |
          File exists: {{ key_stat.stat.exists }}
          File size: {{ key_stat.stat.size }}
          File mode: {{ key_stat.stat.mode }}

    - name: Show first few lines of deployed key
      shell: head -n 3 {{ target_key_path }}
      register: key_head
      ignore_errors: yes

    - name: Show last few lines of deployed key  
      shell: tail -n 3 {{ target_key_path }}
      register: key_tail
      ignore_errors: yes

    - name: Display key file content check
      debug:
        msg: |
          First 3 lines:
          {{ key_head.stdout }}
          
          Last 3 lines:
          {{ key_tail.stdout }}

    - name: Test key with ssh-keygen
      command: ssh-keygen -y -f {{ target_key_path }}
      register: key_test
      ignore_errors: yes

    - name: Show key test results
      debug:
        msg: |
          Return code: {{ key_test.rc }}
          Stdout: {{ key_test.stdout }}
          Stderr: {{ key_test.stderr }}
