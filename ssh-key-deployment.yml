---
- name: Deploy SSH private key to all Debian LXCs
  hosts: debian_migration_targets
  gather_facts: yes
      
  vars:
    ssh_key_path: "/root/.ssh/id_rsa"
    
  tasks:
    - name: Check if Survey variable is provided
      fail:
        msg: "SSH private key must be provided via Survey variable 'ssh_private_key_content'"
      when: ssh_private_key_content is not defined or ssh_private_key_content == ''
      run_once: true

    - name: Validate alpine_source is defined
      fail:
        msg: "alpine_source must be defined for {{ inventory_hostname }} in inventory"
      when: alpine_source is not defined

    - name: Display deployment info
      debug:
        msg: |
          ================================
          Deployment Target: {{ inventory_hostname }}
          Alpine Source: {{ alpine_source }}
          Target key path: {{ ssh_key_path }}
          ================================

    - name: Check survey variable length
      debug:
        msg: "SSH key survey var length: {{ ssh_private_key_content | length }}"

    - name: Ensure .ssh directory exists with correct permissions
      file:
        path: "{{ ssh_key_path | dirname }}"
        state: directory
        mode: '0700'
        owner: root
        group: root

    - name: Create Python script to format SSH key
      copy:
        content: |
          #!/usr/bin/env python3
          import re
          import sys
          
          key_content = sys.argv[1]
          output_file = sys.argv[2]
          
          # Remove BEGIN/END markers and all whitespace
          key_body = re.sub(r'-----BEGIN OPENSSH PRIVATE KEY-----', '', key_content)
          key_body = re.sub(r'-----END OPENSSH PRIVATE KEY-----', '', key_body)
          key_body = re.sub(r'\s+', '', key_body)
          
          # Write properly formatted key
          with open(output_file, 'w') as f:
              f.write('-----BEGIN OPENSSH PRIVATE KEY-----\n')
              # Split into 64-character lines
              for i in range(0, len(key_body), 64):
                  f.write(key_body[i:i+64] + '\n')
              f.write('-----END OPENSSH PRIVATE KEY-----\n')
          
          print('Key formatted successfully')
        dest: /tmp/format_ssh_key.py
        mode: '0755'

    - name: Format SSH key using Python script
      command: python3 /tmp/format_ssh_key.py "{{ ssh_private_key_content }}" "{{ ssh_key_path }}"
      register: format_result

    - name: Set proper permissions on SSH key
      file:
        path: "{{ ssh_key_path }}"
        mode: '0600'

    - name: Test SSH key validity
      command: ssh-keygen -y -f {{ ssh_key_path }}
      register: key_validation
      ignore_errors: yes
      changed_when: false

    - name: Display deployment completion
      debug:
        msg: |
          ================================
          SSH Key Deployment Complete
          ================================
          Target: {{ inventory_hostname }}
          SSH Key: ✓ Deployed to {{ ssh_key_path }}
          Alpine Source: {{ alpine_source }}
          Key Status: {{ '✓ Valid' if key_validation.rc == 0 else '✗ Invalid' }}
          ================================
