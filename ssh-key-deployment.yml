---
- name: Simple SSH key deployment test
  hosts: t-vaultwarden2.home.seiffert.me
  gather_facts: yes
      
  vars:
    target_key_path: "/root/.ssh/id_rsa"
    
  tasks:
    - name: Check if Survey variable is provided
      fail:
        msg: "SSH private key must be provided via Survey variable 'ssh_private_key_content'"
      when: ssh_private_key_content is not defined or ssh_private_key_content == ''
      run_once: true

    - name: Check survey variable length
      debug:
        msg: "SSH key survey var length: {{ ssh_private_key_content | length }}"

    - name: Show first and last few characters
      debug:
        msg: |
          First 50 chars: {{ ssh_private_key_content[:50] }}
          Last 50 chars: {{ ssh_private_key_content[-50:] }}

    - name: Create Python script to format SSH key
      copy:
        content: |
          #!/usr/bin/env python3
          import re
          import sys
          
          key_content = sys.argv[1]
          output_file = sys.argv[2]
          
          # Remove BEGIN/END markers and all whitespace
          key_body = re.sub(r'-----BEGIN OPENSSH PRIVATE KEY-----', '', key_content)
          key_body = re.sub(r'-----END OPENSSH PRIVATE KEY-----', '', key_body)
          key_body = re.sub(r'\s+', '', key_body)
          
          # Write properly formatted key
          with open(output_file, 'w') as f:
              f.write('-----BEGIN OPENSSH PRIVATE KEY-----\n')
              # Split into 64-character lines
              for i in range(0, len(key_body), 64):
                  f.write(key_body[i:i+64] + '\n')
              f.write('-----END OPENSSH PRIVATE KEY-----\n')
          
          print('Key formatted successfully')
        dest: /tmp/format_ssh_key.py
        mode: '0755'

    - name: Format SSH key using Python script
      command: python3 /tmp/format_ssh_key.py "{{ ssh_private_key_content }}" "{{ target_key_path }}"
      register: format_result

    - name: Set proper permissions on SSH key
      file:
        path: "{{ target_key_path }}"
        mode: '0600'

    - name: Show format result
      debug:
        msg: "Format result: {{ format_result.stdout }}"

    - name: Check deployed file
      stat:
        path: "{{ target_key_path }}"
      register: key_stat

    - name: Show file info
      debug:
        msg: |
          File exists: {{ key_stat.stat.exists }}
          File size: {{ key_stat.stat.size }}
          File mode: {{ key_stat.stat.mode }}

    - name: Show first few lines of deployed key
      shell: head -n 3 {{ target_key_path }}
      register: key_head
      ignore_errors: yes

    - name: Show last few lines of deployed key  
      shell: tail -n 3 {{ target_key_path }}
      register: key_tail
      ignore_errors: yes

    - name: Display key file content check
      debug:
        msg: |
          First 3 lines:
          {{ key_head.stdout }}
          
          Last 3 lines:
          {{ key_tail.stdout }}

    - name: Test key with ssh-keygen
      command: ssh-keygen -y -f {{ target_key_path }}
      register: key_test
      ignore_errors: yes

    - name: Show key test results
      debug:
        msg: |
          Return code: {{ key_test.rc }}
          Stdout: {{ key_test.stdout }}
          Stderr: {{ key_test.stderr }}
