---
- name: Deploy OpenTelemetry Agent to Debian containers
  hosts: debian
  remote_user: ansible
  become: true
  become_user: root
  vars:
    otel_collector_version: "0.82.0"
    # otel_collector_endpoint will be set via survey variable
    otel_script_path: "/etc/otel-agent-install.sh"
    supervisor_config_path: "/etc/supervisor/conf.d"
    
  tasks:
    # Gather facts to get hostname
    - name: Gather system facts
      setup:
        filter: ansible_hostname
    
    # Validate that otel_collector_endpoint is provided
    - name: Validate otel_collector_endpoint is provided
      fail:
        msg: "otel_collector_endpoint must be provided via survey variable"
      when: otel_collector_endpoint is not defined or otel_collector_endpoint == ""
    
    # First, check if OpenTelemetry is already running properly
    - name: Check if OpenTelemetry agent is already running
      shell: supervisorctl status otel-collector | grep RUNNING
      register: initial_otel_status
      changed_when: false
      failed_when: false
      
    - name: Set already installed flag
      set_fact:
        otel_already_installed: "{{ initial_otel_status.rc == 0 }}"
        
    - name: Skip message
      debug:
        msg: "OpenTelemetry agent is already installed and running. Skipping installation."
      when: otel_already_installed
        
    # Continue only if not already installed
    - name: Ensure required packages are installed
      apt:
        name:
          - curl
          - tar
          - gzip
          - supervisor
          - wget
        state: present
        update_cache: yes
      when: not otel_already_installed
      
    - name: Create necessary directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/etc/otel"
        - "/var/log/otel"
        - "{{ supervisor_config_path }}"
      when: not otel_already_installed
    
    # Check if binary already exists
    - name: Check if OpenTelemetry collector binary already exists
      stat:
        path: "/usr/local/bin/otelcol"
      register: otel_binary
      
    - name: Create OpenTelemetry collector installation script
      template:
        src: "templates/otel-agent-install.sh.j2"
        dest: "{{ otel_script_path }}"
        mode: '0755'
      when: 
        - not otel_already_installed
        - not otel_binary.stat.exists
      
    - name: Execute installation script
      command: "{{ otel_script_path }}"
      register: install_result
      changed_when: "'Collector binary installed' in install_result.stdout or 'OpenTelemetry Collector is running successfully' in install_result.stdout"
      when: 
        - not otel_already_installed
        - not otel_binary.stat.exists
      
    # Wait for OpenTelemetry agent to fully start
    - name: Wait for OpenTelemetry agent to fully start
      pause:
        seconds: 10
      when: not otel_already_installed
        
    # Final status check (only runs if we actually did an installation)
    - name: Check if OpenTelemetry agent is running
      shell: supervisorctl status otel-collector | grep RUNNING
      register: otel_status
      changed_when: false
      failed_when: false
      when: not otel_already_installed
        
    - name: Set status fact
      set_fact:
        agent_status: "{{ otel_status.rc | default(0) if not otel_already_installed else 0 }}"
      
    - name: Report installation status
      debug:
        msg: >-
          {% if otel_already_installed %}
          OpenTelemetry agent was already installed and running. No changes made.
          {% else %}
          OpenTelemetry agent installation status: {{ 'SUCCESS' if agent_status == 0 else 'FAILED' }}
          {% endif %}
      
    - name: Fail if installation was not successful
      fail:
        msg: "OpenTelemetry agent installation failed. Check the logs: cat /var/log/otel/collector.log"
      when: 
        - not otel_already_installed
        - agent_status != 0
